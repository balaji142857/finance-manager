plugins {
    id "org.springframework.boot" version "${springBootVersion}"
    id "java"
    id "application"
    id "io.freefair.lombok" version "${pluginLombokVersion}"
    id "maven-publish"
    id "idea"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

group "com.bk.fm"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

springBoot {
    buildInfo()
    mainClass = "com.kb.fm.FinManApplication"
}

dependencies {
    implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
    implementation "org.springframework.boot:spring-boot-configuration-processor"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "io.micrometer:micrometer-registry-prometheus"

    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "javax.cache:cache-api:${jCacheVersion}"
    implementation "net.sf.ehcache:ehcache:${ehCacheVersion}"

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.postgresql:postgresql:${postgresSqlVersion}"
//    implementation "org.hibernate:hibernate-envers:5.6.7.Final"
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${p6spyVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
//    implementation "net.logstash.logback:logstash-logback-encoder:4.11"

    implementation "org.apache.poi:poi:${poiVersion}"
    implementation "org.apache.poi:poi-ooxml:${poiVersion}"

    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

}

test {
    useJUnitPlatform()
}